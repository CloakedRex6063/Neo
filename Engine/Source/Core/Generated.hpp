#pragma once
// This file was generated by PreBuildTool
// Do not modify.
namespace Neo
{

inline void RegisterName()
{
    using namespace entt::literals;
    entt::meta_factory<Name>{}
        .data<&Name::EntityName>("EntityName"_hs)
        .custom<std::string>("EntityName");
}


inline void RegisterTransform()
{
    using namespace entt::literals;
    entt::meta_factory<Transform>{}
        .data<&Transform::Position>("Position"_hs)
        .custom<std::string>("Position")
        .data<&Transform::Rotation>("Rotation"_hs)
        .custom<std::string>("Rotation")
        .data<&Transform::Scale>("Scale"_hs)
        .custom<std::string>("Scale");
}


inline void RegisterHierarchy()
{
    using namespace entt::literals;
    entt::meta_factory<Hierarchy>{}
        .data<&Hierarchy::Parent>("Parent"_hs)
        .custom<std::string>("Parent")
        .data<&Hierarchy::Children>("Children"_hs)
        .custom<std::string>("Children");
}


inline void RegisterMeta() {
    RegisterName();
    RegisterTransform();
    RegisterHierarchy();
}
}
